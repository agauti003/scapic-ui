{"version":3,"sources":["webpack:///./src/actions/index.js","webpack:///./src/Components/Categories/Models.js","webpack:///./src/Components/Categories/Categories.js","webpack:///./src/Components/Categories/Box.js","webpack:///./src/Components/App.js"],"names":["handleModalToggle","initState","type","payload","Models","props","className","src","model3dObject","thumb","alt","width","height","obj-attr","obj","mtl-attr","mtl","onClick","event","handleImageClick","modalShow","name","propTypes","PropTypes","func","object","bool","connect","state","dispatch","modalState","imageObjLinkToShow","target","getAttribute","imageMetaLinkToShow","settings","require","Categories","categories","categoryData","some","elem","categoriesIndex","models","loadMoreCount","index","push","key","length","handleLoadMoreClick","number","array","Box","start","bind","stop","animate","Component","this","mount","refs","clientWidth","clientHeight","scene","THREE","camera","position","z","renderer","antialias","setClearColor","setSize","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","keyLight","set","fillLight","backLight","normalize","add","mtlLoader","MTLLoader","objLoader","OBJLoader","pathObj","load","materials","preload","setMaterials","requestAnimationFrame","update","render","appendChild","frameId","cancelAnimationFrame","window","ref","style","string","modelData","App","PureComponent","id","imageData"],"mappings":"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","file":"3.3a26d5ba712bb7155414.js","sourcesContent":["export const handleModalToggle = initState => ({\r\n    type: 'MODAL_CLICK',\r\n    payload: !initState\r\n});\r\n\r\nexport const handleLoadMoreClick = initState => {\r\n    return ({\r\n        type: 'LOAD_MORE_CATEGORIES',\r\n        payload: initState + 3\r\n    });\r\n};\r\n\r\nexport const handleImageClick = (event, modalState) => {\r\n    const imageObjLinkToShow = event.target.getAttribute('obj-attr');\r\n    const imageMetaLinkToShow = event.target.getAttribute('mtl-attr');\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'IMAGE_CLICK',\r\n            payload: {\r\n                imageObjLinkToShow,\r\n                imageMetaLinkToShow\r\n            }\r\n        });\r\n        dispatch(handleModalToggle(modalState));\r\n    };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { handleImageClick } from '../../actions';\r\n\r\nfunction Models (props) {\r\n    return (\r\n        <div className={\"image-holder\"}>\r\n            <div className=\"carousel-item-container\">\r\n                <br />\r\n                <div className={\"img-wrapper parent-image\"}>\r\n                    <img\r\n                        src={props.model3dObject.thumb}\r\n                        className={\"\"}\r\n                        alt=\"Images\"\r\n                        width=\"100%\"\r\n                        height=\"150px\"\r\n                        obj-attr={props.model3dObject.obj}\r\n                        mtl-attr={props.model3dObject.mtl}\r\n                        onClick={(event) => props.handleImageClick(event, props.modalShow)}\r\n                    />\r\n                </div>\r\n                <div className={\"item-details-wrappe\"}>\r\n                    <h6 className=\"item-title\">{props.model3dObject.name}</h6>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nModels.propTypes = {\r\n    handleImageClick: PropTypes.func,\r\n    model3dObject: PropTypes.object,\r\n    modalShow: PropTypes.bool\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleImageClick: payload => dispatch(handleImageClick(payload))\r\n});\r\nconst mapStateToProps = state => ({\r\n    modalShow: state.modalShow\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Models);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Models from './Models';\r\nimport Slider from \"react-slick\";\r\nconst settings = require(\"./SlideSetting.json\");\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { handleLoadMoreClick } from '../../actions';\r\n\r\nfunction Categories (props) {\r\n    const categories = [];\r\n    props.categoryData.some((elem, categoriesIndex) => {\r\n        let models = [];\r\n        if (categoriesIndex < props.loadMoreCount) {\r\n            elem.models.some((model3dObject, index) => {\r\n                models.push(<Models\r\n                    key={elem.name + index + categoriesIndex}\r\n                    model3dObject={model3dObject}\r\n                />);\r\n            });\r\n            categories.push(\r\n                <span key={elem.name + categoriesIndex} className={\"\"}>\r\n                    <div>\r\n                        <header className={\"category-header\"}>\r\n                            {elem.name}\r\n                        </header>\r\n                    </div>\r\n                    <Slider {...settings}>\r\n                        {models}\r\n                    </Slider>\r\n                </span>\r\n            );\r\n        } else if (categoriesIndex === props.loadMoreCount &&\r\n            categoriesIndex < props.categoryData.length) {\r\n            categories.push(\r\n                <div\r\n                    key={categoriesIndex}\r\n                    className={\"load-more-container\"}\r\n                    onClick={() => props.handleLoadMoreClick(props.loadMoreCount)}>\r\n                    {\"Load More...\"}\r\n                </div>\r\n            );\r\n        } else {\r\n            return true;\r\n        }\r\n    });\r\n    return (<span>\r\n        {categories}\r\n    </span>);\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleLoadMoreClick: payload => dispatch(handleLoadMoreClick(payload))\r\n});\r\nconst mapStateToProps = state => ({\r\n    loadMoreCount: state.loadMoreCount\r\n});\r\nCategories.propTypes = {\r\n    handleLoadMoreClick: PropTypes.func,\r\n    handleImageClick: PropTypes.func,\r\n    loadMoreCount: PropTypes.number,\r\n    categoryData: PropTypes.array\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as THREE from 'three';\r\nimport { MTLLoader, OBJLoader } from 'three-obj-mtl-loader';\r\nimport OrbitControls from 'three-orbitcontrols';\r\n\r\nexport default class Box extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.start = this.start.bind(this);\r\n        this.stop = this.stop.bind(this);\r\n        this.animate = this.animate.bind(this);\r\n    }\r\n    componentDidMount () {\r\n        this.mount = this.refs.mount;\r\n        const width = this.mount.clientWidth;\r\n        const height = this.mount.clientHeight;\r\n        var scene = new THREE.Scene();\r\n\r\n        var camera = new THREE.PerspectiveCamera(75, width / width, 0.1, 1000);\r\n        camera.position.z = 30;\r\n\r\n        var renderer = new THREE.WebGLRenderer({ antialias: true });\r\n        renderer.setClearColor('#F2F2F2');\r\n        renderer.setSize(width, height);\r\n\r\n\r\n        var controls = new OrbitControls(camera, renderer.domElement);\r\n        controls.enableDamping = true;\r\n        controls.dampingFactor = 0.25;\r\n        controls.enableZoom = true;\r\n\r\n\r\n        var keyLight = new THREE.DirectionalLight(new THREE.Color('hsl(30, 100%, 75%)'), 1.0);\r\n        keyLight.position.set(-100, 0, 100);\r\n\r\n        var fillLight = new THREE.DirectionalLight(new THREE.Color('hsl(240, 100%, 75%)'), 0.75);\r\n        fillLight.position.set(100, 0, 100);\r\n\r\n        var backLight = new THREE.DirectionalLight(0xffffff, 1.0);\r\n        backLight.position.set(100, 0, -100).normalize();\r\n\r\n        scene.add(keyLight);\r\n        scene.add(fillLight);\r\n        scene.add(backLight);\r\n\r\n        let mtlLoader = new MTLLoader();\r\n        let objLoader = new OBJLoader();\r\n\r\n\r\n        let pathObj = this.props.obj;\r\n\r\n        mtlLoader.load(this.props.obj, function (materials) {\r\n            materials.preload();\r\n            objLoader.setMaterials(materials);\r\n            objLoader.load(pathObj, function (object) {\r\n                scene.add(object);\r\n                object.position.z = 0;\r\n            });\r\n        });\r\n\r\n        var animate = function () {\r\n            requestAnimationFrame(animate);\r\n            controls.update();\r\n            renderer.render(scene, camera);\r\n        };\r\n        animate();\r\n\r\n        this.mount.appendChild(renderer.domElement);\r\n        this.start();\r\n    }\r\n    start () {\r\n        if (!this.frameId) {\r\n            this.frameId = requestAnimationFrame(this.animate);\r\n        }\r\n    }\r\n    stop () {\r\n        cancelAnimationFrame(this.frameId);\r\n    }\r\n    animate () {\r\n        this.frameId = window.requestAnimationFrame(this.animate);\r\n    }\r\n    render () {\r\n        return (\r\n            <div\r\n                ref={'mount'}\r\n                style={{ width: '100%', height: '450px' }} />\r\n        );\r\n    }\r\n}\r\nBox.propTypes = {\r\n    obj: PropTypes.string,\r\n    mtl: PropTypes.string\r\n};\r\n","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Categories from './Categories/Categories';\r\nimport { handleModalToggle } from '../actions';\r\nconst modelData = require('./Categories/models.json');\r\nimport Box from './Categories/Box';\r\nimport './App.css';\r\n\r\nclass App extends PureComponent {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n    render () {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <div className=\"header-container\">\r\n                        <h3>3D Models</h3>\r\n                    </div>\r\n                </header>\r\n                <div className={\"fade-in main-content-wrapper\"}>\r\n                    <Categories categoryData={modelData.categories} />\r\n                </div>\r\n                {this.props.modalShow ? <div id=\"myModal\" className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <button\r\n                            className=\"close\"\r\n                            onClick={this.props.handleModalToggle}>&times;</button>\r\n                        <div className={'box-container'}>\r\n                            <Box\r\n                                obj={this.props.imageObjLinkToShow}\r\n                                mtl={this.props.imageMetaLinkToShow} />\r\n                        </div>\r\n                    </div>\r\n                </div> : \"\"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    modalShow: PropTypes.bool,\r\n    handleModalToggle: PropTypes.func,\r\n    imageObjLinkToShow: PropTypes.string,\r\n    imageMetaLinkToShow: PropTypes.string\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleModalToggle: payload => dispatch(handleModalToggle(payload))\r\n});\r\nconst mapStateToProps = state => ({\r\n    modalShow: state.modalShow,\r\n    imageObjLinkToShow: state.imageData.imageObjLinkToShow,\r\n    imageMetaLinkToShow: state.imageData.imageMetaLinkToShow\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n\r\n"],"sourceRoot":""}